################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# ../CompilerGym/compiler_gym/third_party/llvm/BUILD                           #
#                                                                              #
# Use cmake_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

cmake_add_all_subdirs()

cmake_py_library(
  NAME
    llvm
  SRCS
    "__init__.py"
  DEPS
    compiler_gym::util
  PUBLIC
)

source_group(
  "compute_ir_instruction_count-files"
  FILES
    "compute_ir_instruction_count",
    if(DARWIN NOT EQUAL TRUE)
      "libLLVMPolly"
    endif()
)

cmake_cc_binary(
  NAME
    compute_ir_instruction_count-prelinked
  SRCS
    "compute_ir_instruction_count.cc"
  COPTS
    "-DGOOGLE_PROTOBUF_NO_RTTI"
    "-fno-rtti"
  DEPS
    unconverted_name:@glog
    unconverted_name:@llvm//10.0.0
)

cmake_genrule(
  OUTS "compute_ir_instruction_count"
  COMMAND
    if (DARWIN EQUAL TRUE)
      "cp ${CMAKE_CURRENT_BINARY_DIR}/compute_ir_instruction_count-prelinked $@"
    else()
      "cp ${CMAKE_CURRENT_BINARY_DIR}/compute_ir_instruction_count-prelinked $@ && " +
      "chmod 666 $@ && " +
      "patchelf --set-rpath '$$ORIGIN' $@ && " +
      "chmod 555 $@"
    endif()
  DEPENDS
    ::compute_ir_instruction_count-prelinked
)

cmake_genrule(
  OUTS "libLLVMPolly.so"
  COMMAND
    "cp $$(dirname $(location @clang-llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04//:clang))/../lib/LLVMPolly.so $@"
  DEPENDS
    "@clang-llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04//:all_files"
    "@clang-llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04//:clang"
)

cmake_py_library(
  NAME
    instcount
  SRCS
    "instcount.py"
  PUBLIC
)

cmake_cc_library(
  NAME
    InstCount
  COPTS
    "-DGOOGLE_PROTOBUF_NO_RTTI"
    "-fno-rtti"
  HDRS
    "InstCount.h"
  SRCS
    "InstCount.cc"
  DEPS
    unconverted_name:@glog
    unconverted_name:@llvm//10.0.0
  PUBLIC
)

cmake_cc_binary(
  NAME
    PrintInstCountFeatureNames
  SRCS
    "PrintInstCountFeatureNames.cc"
  DEPS
    ::InstCount
)

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###
